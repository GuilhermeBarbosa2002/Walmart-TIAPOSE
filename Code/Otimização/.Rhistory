9^^9
9^99
Inf>1
pi
sin(pi*2/3)
help("sin")
x=1
plot(1)
plot(1:10)
plot(1:10, pc="X", main="ola", col="blue", lwd = 3, type="b")
plot(1:10, pch="X", main="ola", col="blue", lwd = 3, type="b")
cls
clear
cls
clear
cl
cls
demo(graphics)
delete
clear
x^2
sqrt(x) + x*pi
jkjk
return(x^2)
quadrado = function(x=1){
return(x^2)
}
quadrado(1)
quadrado(5)
quadrado = function(x){
return(x^2)
}
quadrado = function(x){
return(x^2)
}
quadrado(5)
COS 180
cos(180)
cos(pi)
cos(0)
cos(pi/2)
x=pi/2
cos(x)
cos(3.13/2)
cos(pi)
cos(0)
cos(pi/2)
cos((pi/2))
q()
library(rminer)
X = concat(1,2,3)
x = c(1,2,3,4,5,6)
x[length(c)]
x[length(x)]
x[length(x = 3)]
x[length(x = 10)]
[length(x)]
x[length(x)]
x[length(x)]
x[7:10]
x[1:3]
x[1:3] = -
x[1:3] = -
d
x[1:3] = - x[1:3]
x
summary(x)
class(x)
setwd("~/")
library(forecast)
forecast.ets()
setwd("C:/Users/guilh/Desktop/TIAPOSE/Walmart-TIAPOSE/Code")
source("C:/Users/guilh/Desktop/TIAPOSE/Walmart-TIAPOSE/Code/snaive.R")
source("C:/Users/guilh/Desktop/TIAPOSE/Walmart-TIAPOSE/Code/snaive.R")
source("C:/Users/guilh/Desktop/TIAPOSE/Walmart-TIAPOSE/Code/snaive.R")
setwd("~/Github/Walmart-TIAPOSE/Code/OTIMIZATION")
source("~/Github/Walmart-TIAPOSE/Code/OTIMIZATION/Otimization.R")
##################### Simulated Annealing #################
SimulatedAnnealing <- function(eval, lower, upper, N, type){
# slight change of a real par under a normal u(0,0.5) function:
rchange2=function(par) # change for hclimbing
{ hchange(par,lower=lower,upper=upper,rnorm,mean=1,sd=0.5,round=FALSE) }
cat("\n ******** Simulated Annealing ******\n")
#cat("Simulated Annealing search D=",D,"(iters=",N,")\n")
CSANN=list(maxit=N,temp=5,trace=TRUE)
SA=optim(par=rep(-10.4,D),fn=eval,method="SANN",gr=rchange2,control=CSANN)
cat("best solution:",SA$par,"evaluation function",SA$value,"\n")
}
#Simulated Annealing
SimulatedAnnealing(eval,lower,upper,N,"max")
SimulatedAnnealing2 <- function(eval, lower, upper, N){
# Função de mudança para o Simulated Annealing
rchange2 <- function(par) {
hchange(par, lower = lower, upper = upper, rnorm, mean = 1, sd = 0.5, round = FALSE)
}
cat("\n ******** Simulated Annealing ******\n")
# Definição dos parâmetros do Simulated Annealing
CSANN <- list(maxit = N, temp = 100, trace = TRUE)
# Execução do Simulated Annealing
SA <- optim(par = rep(0, length(lower)), fn = eval, method = "SANN", gr = rchange2, control = CSANN)
cat("Melhor solução encontrada:", SA$par, "Valor da função de avaliação:", SA$value, "\n")
}
SimulatedAnnealing2(eval,lower,upper,N,"max")
SimulatedAnnealing2(eval,lower,upper,N)
SimulatedAnnealing2 <- function(eval, lower, upper, N, type){
# Função de mudança para o Simulated Annealing
rchange2 <- function(par) {
hchange(par, lower = lower, upper = upper, rnorm, mean = 1, sd = 0.5, round = FALSE)
}
cat("\n ******** Simulated Annealing ******\n")
# Definição dos parâmetros do Simulated Annealing
CSANN <- list(maxit = N, temp = 100, trace = TRUE)
# Execução do Simulated Annealing
SA <- optim(par = rep(0, length(lower)), fn = eval, method = "SANN", gr = rchange2, control = CSANN)
cat("Melhor solução encontrada:", SA$par, "Valor da função de avaliação:", SA$value, "\n")
}
SimulatedAnnealing2(eval,lower,upper,N,"max")
SimulatedAnnealing2 <- function(eval, lower, upper, N, type){
# Função de mudança para o Simulated Annealing
rchange2 <- function(par) {
hchange(par, lower = lower, upper = upper, rnorm, mean = 1, sd = 0.5, round = FALSE)
}
cat("\n ******** Simulated Annealing ******\n")
# Definição dos parâmetros do Simulated Annealing
CSANN <- list(maxit = N, temp = 100, trace = TRUE)
# Execução do Simulated Annealing
SA <- optim(par = rep(0, length(upper)), fn = eval, method = "SANN", gr = rchange2, control = CSANN)
cat("Melhor solução encontrada:", SA$par, "Valor da função de avaliação:", SA$value, "\n")
}
SimulatedAnnealing2(eval,lower,upper,N,"max")
length(upper)
length(lower)
source("~/Github/Walmart-TIAPOSE/Code/OTIMIZATION/Otimization.R")
